[CRAB]
jobtype = cmssw
scheduler = remoteGlidein
#scheduler=glite
#server_name = cern
use_server=0

[CMSSW]
### The data you want to access (to be found on DBS)
datasetpath=/RelValFourMuPt1_200_UPG2023_BE5D/CMSSW_6_2_0_SLHC7-DES19_62_V8_UPG2023-v2/GEN-SIM
##dbs_url = http://cmsdbsprod.cern.ch/cms_dbs_prod_global/servlet/DBSServlet 
###dbs_url = https://cmsweb.cern.ch/dbs/prod/phys03/DBSReader
###dbs_url = https://cmsweb.cern.ch/dbs/prod/phys01/DBSReader
###dbs_url = https://cmsweb.cern.ch/dbs/prod/phys02/DBSReader
dbs_url = https://cmsweb.cern.ch/dbs/prod/global/DBSReader
use_dbs3=1

### The ParameterSet you want to use
pset=Digitizer.py

### Splitting parameters
total_number_of_events=-1
events_per_job=100
#number_of_jobs = 100
#total_number_of_lumis=-1
#lumis_per_job=56

### The output files (comma separated list)
output_file=DigiPU.root

#show_prod = 1

[USER]
### OUTPUT files Management
##  output back into UI
return_data=0
use_parent=1

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
ui_working_dir = /user/tlenzi/CRAB
#user_remote_dir = /store/user/tlenzi/tracker/mixing
#user_remote_dir = tracker/mixing
check_user_remote_dir   = 0
### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir = 

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
storage_element = T2_BE_IIHE
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = 

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = Skim

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch
### directory or tree of directory under the mounpoint 
#user_remote_dir = /user/s/sabes/SkimMCminBias900GeV

### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=1
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = Mixed_PU_Thomas_20May2014
### Specify the URL of DBS istance where CRAB has to publish the output files
dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet 
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
### RB/WMS management:
#rb = CERN
proxy_server            = myproxy.cern.ch
virtual_organization    = cms
group                   = becms
#max_cpu_time = 
#max_wall_clock_time = 2160

###  Black and White Lists management:
### By Storage
#se_black_list = T0,T1
#se_white_list = T2_FR_GRIF_LLR
#se_white_list = T2_CH_CAF

### By ComputingElement
#ce_white_list = T2_FR_GRIF_LLR
#ce_white_list = datagrid.cea.fr
#ce_white_list= polgrid1.in2p3.fr
#ce_black_list = T2_ES_IFCA,T2_US_Nebraska,T2_BR_SPRACE,T2_FR_IPHC,T2_RU_IHEP,T2_RU_JINR

###to run at GRIF with local priority
#dont_check_proxy= 1 
###user has to take care of the proxy.
#virtual_organization=vo.llr.in2p3.fr 
#wms_service=https://grid25.lal.in2p3.fr:7443/glite_wms_wmproxy_server
#se_white_list= polgrid4.in2p3.fr

#[CONDORG]
### Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

### Specify addition condor_g requirments
### use this requirment to run on a cms dedicated hardare
#globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
### use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))
